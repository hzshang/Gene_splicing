b 162
r
d
p pool.list[0]
p *(unit*)pool.list[0]
n
p *(unit*)pool.list[0]
p *(unit*)pool.list[1]
p *(unit*)pool.list[2]
p (unit*)pool.size
p *(unit*)pool.list[0x27dae-1]
p *(unit*)pool.list[0x27dae-2]
p *(unit*)pool.list[0x27dae-3]
p *(unit*)pool.list[0x27dae-4]
p pool.list[0x27dae-4]
p pool.list[0x27dae-3]
p pool.list[0x27dae]
p pool.list[0x27dab]
p pool.list[0x27dad]
make
b 162
r
n
p pool.list[0x27dad]
p pool.list[0x27dae]
p pool.list[0x27dad]
p *(unit*)pool.list[0x27dad]
p *(unit*)pool.list[0x27dae]
p *(unit*)pool.list[0x27dac]
p *(unit*)pool.list[0x27dab]
make
make
make
r
n
p *(unit*)pool.list[0x27dab]
p *(unit*)pool.list[0x27dac]
p *(unit*)pool.list[0x27dad]
p *(unit*)pool.list[0x27dae]
make
r
n
p *(unit*)pool.list[0]
p *(unit*)pool.list[1]
p *(unit*)pool.list@10
p *pool.list@10
p *pool.list@100
p *pool.list@200
make
r
n
p *pool.list@200
r
make
r
make
make
r
d
b 158
r
file test
b main
r
n
until
n
until
b 16
r
c
p array 
p array@10
p *array@10
p/x *array@10
r
b 16
r
p *array@10
b 158
r
n
p pool.list
p *pool.list@10
p *pool.list[0]
p *(unit*)pool.list[0]
p *(unit*)pool.list[1]
p *(unit*)pool.list[2]
p pool.size
p *(unit*)pool.list[163245]
p *(unit*)pool.list[163246]
p *(unit*)pool.list[163244]
p *(unit*)pool.list[163243]
make
r
n
p *(unit*)pool.list[163243]
p *(unit*)pool.list[163244]
p *(unit*)pool.list[163245]
p *(unit*)pool.list[163246]
p *(unit*)pool.list[163243]
p *(unit*)pool.list[163242]
p *(unit*)pool.list[163241]
p *(unit*)pool.list[163240]
p *(unit*)pool.list[0]
p *(unit*)pool.list[1]
p *(unit*)pool.list[2]
make
make
man qsort
d
file main
b 160
r
p pool.list
p pool.list[0]
p (unit*)pool.list[0]
p *(unit*)pool.list[0]
p *(unit*)pool.list[1]
p *(unit*)pool.list[2]
p *(unit*)pool.list[3]
p *(unit*)pool.list[4]
make
r
p *(unit*)pool.list[3]
p *(unit*)pool.list[1]
p *(unit*)pool.list[0]
p *(unit*)pool.size
p *(unit*)pool.list[0x27daf]
p *(unit*)pool.list[0x27dad]
p *(unit*)pool.list[0x27dae]
p *(unit*)pool.list[0x27dab]
d
make
make
make
d 161
r
b 161
r
b 161
r
p pool.list
p *pool.list
p *pool.list@10
p *(unit*)pool.list[0]
p *(unit*)pool.list[1]
p *(unit*)pool.list[2]
p *(unit*)pool.list[3]
p *(unit*)pool.list[4]
p *(unit*)pool.list[5]
p *(unit*)pool.list[6]
b 162
r
p pool
p pool.list[0]
p *(unit*)pool.list[0]
p *(unit*)pool.list[0].next.list[0]
p *(unit*)pool.list[0].next.list
p ((unit*)pool.list)[0].next.list
p (unit*)((unit*)pool.list)[0].next.list[0]
p *(unit*)((unit*)pool.list)[0].next.list[0]
p ((unit*)((unit*)pool.list)[0].next.list)[0]
n
p pool.size
make
make
make
b 162
d
b 162
r
make
r
p pool.size
n
p sum
p pool.size
p pool.list[0]
p *(unit*)pool.list[0]
p *(unit*)pool.list[0].bext
p *(unit*)pool.list[0].best
p (*(unit*)pool.list[0]).best
p *(*(unit*)pool.list[0]).best
p (*(unit*)pool.list[0]).next
p (*(unit*)pool.list[0]).next[0]
p (*(unit*)pool.list[0]).next.list
p *(*(unit*)pool.list[0]).next.list@2
p/x *(unit*)0x3f426d0
p/x (*(unit*)0x3f426d0).next.list
p/x (*(unit*)0x3f426d0).next.list[0]
p *(*(unit*)pool.list[0]).p1
x/s *(*(unit*)pool.list[0]).p1
x/s (*(unit*)pool.list[0]).p1
p/x strlen((*(unit*)pool.list[0]).p1)
p/x 0x12d+0x1ee
p/x 0x494
p/x 494
n
n
p tmp
p *tmp
p *tmp.best
p/x 494+strlen(*tmp.best.p1)
b append_nchar
r
p  src->p1
p len
n
p src->p1
n
p src
p *src
c
d
b append_str 
c
 str1
p strlen(str1)
p len
n
p len
s
p str1
p src->p1
n
p src->p1
p strlen(src->p1)
n
p src->len
p len
p src->p1
p strlen(src->p1)
p src->len
b add_edge 
r
n
p dst->len
p dst->len+src->len
p dst->len+src->len-28
n
p src->len
c
d 5
c
d
b append_str
c
s
finish
s
s
n
p v
p *v
make
