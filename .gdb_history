n
p *v
p *tmp
n
info s
d
b 156
c
info s
b 109
r
make
b 109
d
b 109
r
info s
make
r
n
c
c
c
d
c
make
make
d
b 169
r
n
b 169
r
r
r
vmmap
make
r
p $rsi
p/s  $rsi
p/x  $rsi
make
make
r
p v
b 115
r
n
p tmp
p *tmp
p *v
n
p *v
p *tmp
n
p tmp
p *tmp
n
s
p v
p *v
n
p *v
n
p *v
n
p *v
n
p v
p *v
make
make
make
make
b find_path 
r
n
p e
p *e
n
until
make
make
b 138
r
n
until
d
make
b 135
r
n
p len
n
p dev
p s_tmp2
s
p len
n
make
b find_path 
r
n
p e
p *e
n
b 136
c
p s_tmp
p s_tmp1
p strlen(s_tmp1)
n
b 185
r
p pool.list
p *pool.list
p *pool.list@10
p **pool.list@10
p *(unit*)*pool.list@10
p (unit*)*pool.list@
p (unit*)*pool.list@1
p *(unit*)pool.list@1
set array=(unit**)pool.list
set $array=(unit**)pool.list
p *$array
p **$array
p **$array@10
p *(*$array)@10
set $array=(unit* [])pool.list
p array
p $array
p *$array
p **$array
p *$array
set $array=(unit** )pool.list
p **$array
p *$array[1]
p *$array[0]
p *$array[1]
p *$array[2]
p *$array[3]
p *$array[100]
p *$array[1000]
p *$array[10000]
p *$array[15000]
n
p *$array[0]
p *$array[1]
p *$array[2]
p *$array[3]
p *$array[4]
p *$array[5]
make
d
b 192
r
p max
p ((unit*)pool.list[i])->len
p ((unit*)pool.list[0])->len
p ((unit*)pool.list[1])->len
p ((unit*)pool.list[2])->len
p ((unit*)pool.list[3])->len
p ((unit*)pool.list[4])->len
p ((unit*)pool.list[5])->len
p ((unit*)pool.list[1000])->len
p ((unit*)pool.list[10000])->len
p ((unit*)pool.list[1000])->len
p ((unit*)pool.list[16000])->len
rmake
make
d
b 192
r
p max
make
b add_edge 
r
p *src
p *dst
s
s
s
s
s
make
make
b add_edge 
r
n
s
n
p v->size
n
n
 b 177
r
n
p pool.size
p pool.list
n
s
p e
p *e
n
p *e
s
s
s
s
s
s
s
s
p tmp
p *tmp
n
b 129
c
p s_tmp1
p strlen(s_tmp1)
d
b vector.c:37
r
p i
p v->size
p v->list[0]
p *(unit*)v->list[0]
p key
p *(unit*)key
s
s
s
s
r
s
p a->len
p *(unit*)a
p *(unit*)b
make
make
r
s
s
n
p i
p v->size
pr
r
s
n
r
n
p i
make
make
make
